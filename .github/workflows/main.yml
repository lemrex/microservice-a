name: CI/CD to Huawei SWR and CCE

env:
  IMAGE_REGISTRY: swr.af-south-1.myhuaweicloud.com
  IMAGE_REPOSITORY: ralf

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['date', 'frontend', 'ip', 'latency', 'random', 'time', 'uuid']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Huawei Cloud SWR
        uses: huaweicloud/swr-login@v2.1.0
        with:
          access-key-id: ${{ secrets.ACCESSKEY }}
          access-key-secret: ${{ secrets.SECRETACCESSKEY }}
          region: af-south-1

      - name: Build and push Docker image for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ matrix.service }}:${{ github.sha }} .
          docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ matrix.service }}:${{ github.sha }}

  patch-manifests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        service: ['date', 'frontend', 'ip', 'latency', 'random', 'time', 'uuid']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Patch image in manifest
        run: |
          sed -i "s@docker-server/docker-org/${{ matrix.service }}-api:image-version@${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ matrix.service }}:${{ github.sha }}@g" manifest/${{ matrix.service }}.yaml

  deploy:
    runs-on: ubuntu-latest
    needs: patch-manifests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure kubectl for Kubernetes Cluster
        run: |
          mkdir -p $HOME/.kube
          export KUBECONFIG=$HOME/.kube/config
          echo "${{ secrets.KUBE_CONFIG_DATA }}" > $KUBECONFIG
          chmod 600 $KUBECONFIG

      - name: Verify cluster access
        run: |
          kubectl version --client
          kubectl cluster-info
          kubectl get nodes

      - name: Apply all manifests once
        run: |
          cat manifest/ip.yaml
          kubectl apply -f manifest/
